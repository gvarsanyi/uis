// Generated by CoffeeScript 1.7.1
(function() {
  var FilesDeployer, TestFilesDeployer,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  FilesDeployer = require('../files-deployer');

  TestFilesDeployer = (function(_super) {
    __extends(TestFilesDeployer, _super);

    function TestFilesDeployer() {
      this.workFile = __bind(this.workFile, this);
      this.followUp = __bind(this.followUp, this);
      return TestFilesDeployer.__super__.constructor.apply(this, arguments);
    }

    TestFilesDeployer.prototype.fileCondition = function(source) {
      return true;
    };

    TestFilesDeployer.prototype.followUp = function(node) {
      var _ref;
      return (_ref = this.source.tasks.tester) != null ? _ref.work(node) : void 0;
    };

    TestFilesDeployer.prototype.workFile = function(source) {
      source.options.basedir = this.source.projectPath;
      source.options.deploy = this.source.repoTmp + 'clone' + this.source.projectPath + '/';
      return TestFilesDeployer.__super__.workFile.apply(this, arguments);
    };

    return TestFilesDeployer;

  })(FilesDeployer);

  module.exports = TestFilesDeployer;

}).call(this);
