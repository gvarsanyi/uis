// Generated by CoffeeScript 1.7.1
(function() {
  var Minifier, Task, config,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Task = require('../task');

  config = require('../config');

  Minifier = (function(_super) {
    __extends(Minifier, _super);

    function Minifier() {
      this.condition = __bind(this.condition, this);
      this.followUp = __bind(this.followUp, this);
      return Minifier.__super__.constructor.apply(this, arguments);
    }

    Minifier.prototype.name = 'minifier';

    Minifier.prototype.followUp = function(node) {
      return this.source.tasks.deployer.work(node);
    };

    Minifier.prototype.condition = function() {
      return !!config[this.source.name].minify;
    };

    return Minifier;

  })(Task);

  module.exports = Minifier;

}).call(this);
